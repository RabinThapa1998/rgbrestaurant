{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if (shadowBefore.length === 0) {\n          shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n        }\n\n        if (shadowAfter.length === 0) {\n          shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n        }\n\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","map":{"version":3,"sources":["/media/rabin/RANDOM1/resturantweb/node_modules/swiper/modules/effect-flip/effect-flip.js"],"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","EffectFlip","_ref","swiper","extendParams","on","flipEffect","slideShadows","limitRotation","transformEl","setTranslate","slides","rtlTranslate","rtl","params","i","length","$slideEl","eq","progress","Math","max","min","offset","swiperSlideOffset","rotate","rotateY","rotateX","tx","cssMode","translate","ty","isHorizontal","style","zIndex","abs","round","shadowBefore","find","shadowAfter","opacity","transform","$targetEl","setTransition","duration","$transitionElements","transition","effect","perspective","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","spaceBetween","virtualTranslate"],"mappings":"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","sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if (shadowBefore.length === 0) {\n          shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n        }\n\n        if (shadowAfter.length === 0) {\n          shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n        }\n\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}