{"ast":null,"code":"import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\nexport default function EffectCube(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n\n        $cubeShadowEl.css({\n          height: `${swiperWidth}px`\n        });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n\n      $slideEl.transform(transform);\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  };\n\n  const setTransition = duration => {\n    const {\n      $el,\n      slides\n    } = swiper;\n    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","map":{"version":3,"sources":["/media/rabin/RANDOM1/resturantweb/node_modules/swiper/modules/effect-cube/effect-cube.js"],"names":["$","effectInit","EffectCube","_ref","swiper","extendParams","on","cubeEffect","slideShadows","shadow","shadowOffset","shadowScale","setTranslate","$el","$wrapperEl","slides","width","swiperWidth","height","swiperHeight","rtlTranslate","rtl","size","swiperSize","browser","params","isHorizontal","isVirtual","virtual","enabled","wrapperRotate","$cubeShadowEl","find","length","append","css","i","$slideEl","eq","slideIndex","parseInt","attr","slideAngle","round","Math","floor","progress","max","min","tx","ty","tz","transform","shadowBefore","shadowAfter","style","opacity","shadowAngle","abs","multiplier","sin","PI","cos","scale1","scale2","offset","zFactor","isSafari","isWebView","setTransition","duration","transition","effect","perspective","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","resistanceRatio","spaceBetween","centeredSlides","virtualTranslate"],"mappings":"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","sourcesContent":["import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\nexport default function EffectCube(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n\n        $cubeShadowEl.css({\n          height: `${swiperWidth}px`\n        });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n\n      $slideEl.transform(transform);\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  };\n\n  const setTransition = duration => {\n    const {\n      $el,\n      slides\n    } = swiper;\n    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}